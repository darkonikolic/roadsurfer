# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Shared/DTO/'

    # Application Services
    App\Application\Service\HealthService:
        arguments:
            $databaseHealth: '@App\Infrastructure\External\Health\DatabaseHealthService'
            $redisHealth: '@App\Infrastructure\External\Health\RedisHealthService'
            $environment: '%env(APP_ENV)%'
    
    # Infrastructure Services
    App\Infrastructure\External\Health\DatabaseHealthService:
        arguments:
            $connection: '@doctrine.dbal.default_connection'
    
    App\Infrastructure\External\Health\RedisHealthService:
        arguments:
            $redis: '@Redis'

    # Cache Services
    App\Infrastructure\External\Cache\FruitCacheService:
        arguments:
            $redis: '@Redis'
            $fruitRepository: '@App\Infrastructure\Persistence\Repository\FruitRepository'
            $cacheTtl: '%env(CACHE_TTL)%'
    
    App\Infrastructure\External\Cache\VegetableCacheService:
        arguments:
            $redis: '@Redis'
            $vegetableRepository: '@App\Infrastructure\Persistence\Repository\VegetableRepository'
            $cacheTtl: '%env(CACHE_TTL)%'

    # Redis service configuration
    Redis:
        class: Redis
        lazy: true
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(REDIS_PORT)%'
            - method: select
              arguments:
                  - '%env(REDIS_DB)%'


